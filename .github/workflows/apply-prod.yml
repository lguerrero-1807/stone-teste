name: Terraform Apply

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform_validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Checkout código
        uses: actions/checkout@v2

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Check Terraform Formatting
        run: terraform fmt -check
        continue-on-error: true

      - name: Correct Terraform Formatting
        if: failure()
        run: terraform fmt --recursive

      - name: Validar código do Terraform
        run: |
          terraform init
          terraform validate

  plan_apply_terraform:
    name: Terraform Plan and Apply (Staging)
    runs-on: ubuntu-latest
    permissions:
      id-token: write # need this for OIDC
      contents: read
    needs: terraform_validate

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Checkout código
        uses: actions/checkout@v2

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}